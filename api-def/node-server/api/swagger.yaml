swagger: "2.0"

################################################################################
# API Information                                                              #
################################################################################
info:
  title: Open City Project API
  description: Interact with your city with the Open City Project API
  version: 1.0.0
  
################################################################################
# Host, Base Path, Schemes and Content Types                                   #
################################################################################
host: api.opencityproject.nz
schemes:
  - https
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
  
################################################################################
# Paths                                                                        #
################################################################################
paths:
  /poi:
    get:
      tags:
      - "Point of Interest"
      summary: "Get Points of Interest"
      description: "Returns information about the Points of Interest near your location.\n"
      operationId: "poiAllGET"
      parameters:
      - name: "lat"
        in: "query"
        description: "Latitude component of location."
        required: true
        type: "number"
        format: "double"
      - name: "long"
        in: "query"
        description: "Longitude component of location."
        required: true
        type: "number"
        format: "double"
      responses:
        200:
          description: "An array of Points of Interest"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/POI"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
    post:
      tags:
      - "Point of Interest"
      summary: "Add Point of Interest"
      description: "Upload a new Point of Interest.\n"
      operationId: "poiPOST"
      parameters:
      - in: "body"
        name: "poi"
        description: "Point of Interest object"
        required: true
        schema:
          $ref: "#/definitions/POI"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
  /poi/{poiId}:
    get:
      tags:
      - "Point of Interest"
      summary: "Get Point of Interest by ID"
      description: "Returns information about the specific Point of Interest.\n"
      operationId: "poiGET"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: string
      responses:
        200:
          description: "A single Point of Interest"
          schema:
            type: "object"
            properties: {}
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
    delete:
      tags:
      - "Point of Interest"
      summary: "Remove Point of Interest by ID"
      description: "Delete a specific Point of Interest.\n"
      operationId: "poiDELETE"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
    patch:
      tags:
      - "Point of Interest"
      summary: "Update Point of Interest"
      description: "Update a specific Point of Interest.\n"
      operationId: "poiPATCH"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: string
      - in: "body"
        name: "poi"
        description: "Point of Interest object"
        required: false
        schema:
          $ref: "#/definitions/POI"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
  /users:
    get:
      tags:
      - "User"
      summary: "Get Users"
      description: "Return an array of all users\n"
      operationId: "usersAllGET"
      parameters: []
      responses:
        200:
          description: "An array of Users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
    post:
      tags:
      - "User"
      summary: "Add a new User"
      description: "Return an array of all users\n"
      operationId: "userPOST"
      parameters:
      - in: "body"
        name: "user"
        description: "User object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
  /users/{userId}:
    get:
      tags:
      - "User"
      summary: "Get User"
      description: "Get User by ID\n"
      operationId: "userGET"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
    delete:
      tags:
      - "User"
      summary: "Remove User"
      description: "Delete User by ID\n"
      operationId: "userDELETE"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
    patch:
      tags:
      - "User"
      summary: "Update User"
      description: "Update User by ID\n"
      operationId: "userPATCH"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: string
      - in: "body"
        name: "user"
        description: "The User object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"

################################################################################
# Definitions                                                                  #
################################################################################      
definitions:
  User:
    type: object
    properties:
      userId:
        type: string
        description: "Unique identifier representing a user"
      username:
        type: string
        description: "Unique identifier representing a user"
      name:
        type: string
        description: "The name of the user"
      email:
        type: string
        description: "The email address of the user"
  POI:
    type: object
    properties:
      id:
        type: string
        description: "Unique identifier representing a specific point of interest\
          \ for a given latitude & longitude"
      name:
        type: string
        description: "The name of the Point of Interest"
      gps_lat:
        type: string
        description: "The latitude for the Point of Interest"
      gps_long:
        type: string
        description: "The longitude for the Point of Interest"
      location_polygon:
        type: string
        description: "The location polygon for the Point of Interest"
      start_date:
        type: string
        description: "The Start Date for the Point of Interest"
      end_date:
        type: string
        description: "The End Date for the Point of Interest"
      opening_hours:
        type: string
        description: "The Opening Hours of the Point of Interest"
      is_all_day:
        type: boolean
        description: "Indicates whether the Point of Interest takes place for the\
          \ entire day"
      poi_url:
        type: string
        description: "URL to an external website for the Point of Interest"
      description:
        type: string
        description: "Description of the Point of Interest"
      categories:
        type: string
        description: "A list of categories for the Point of Interest, deliminated by commas"
      tags:
        type: string
        description: "A list of tags for the Point of Interest, deliminated by commas"
  Success:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: "Response code"
      message:
        type: string
        description: "Response message"
      object:
        type: "object"
        description: "Response object"
        properties: {}
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: "Response code"
      message:
        type: string
        description: "Response message"
      fields:
        type: string
