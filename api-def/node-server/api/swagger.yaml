---
swagger: "2.0"
info:
  description: "Interact with your city with the Open City Project API"
  version: "1.0.0"
  title: "Open City Project API"
host: "localhost:8080"
basePath: "/v1"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /category:
    get:
      tags:
      - "Point of Interest"
      summary: "Get Categories"
      description: "Returns an array of category."
      operationId: "categoryGET"
      parameters: []
      responses:
        200:
          description: "An array of category"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointOfInterest"
  /poi:
    get:
      tags:
      - "Point of Interest"
      summary: "Get Points of Interest"
      description: "Returns information about the Points of Interest near your location.\n"
      operationId: "poiAllGET"
      parameters:
      - name: "lat"
        in: "query"
        description: "Latitude component of location."
        required: true
        type: "number"
        format: "double"
      - name: "long"
        in: "query"
        description: "Longitude component of location."
        required: true
        type: "number"
        format: "double"
      - name: "radiusInMetre"
        in: "query"
        description: "Search radius in metre, default to 5000 metre."
        required: false
        type: "integer"
        default: 5000
        format: "int32"
      responses:
        200:
          description: "An array of Points of Interest"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Poi"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointOfInterest"
    post:
      tags:
      - "Point of Interest"
      summary: "Add Point of Interest"
      description: "Upload a new Point of Interest.\n"
      operationId: "poiPOST"
      parameters:
      - in: "body"
        name: "poi"
        description: "Point of Interest object"
        required: true
        schema:
          $ref: "#/definitions/Poi"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointOfInterest"
  /poi/{poiId}:
    get:
      tags:
      - "Point of Interest"
      summary: "Get Point of Interest by ID"
      description: "Returns information about the specific Point of Interest.\n"
      operationId: "poiGET"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: "string"
      responses:
        200:
          description: "A single Point of Interest"
          schema:
            type: "object"
            properties: {}
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointOfInterest"
    delete:
      tags:
      - "Point of Interest"
      summary: "Remove Point of Interest by ID"
      description: "Delete a specific Point of Interest.\n"
      operationId: "poiDELETE"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointOfInterest"
    patch:
      tags:
      - "Point of Interest"
      summary: "Update Point of Interest"
      description: "Update a specific Point of Interest.\n"
      operationId: "poiPATCH"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: "string"
      - in: "body"
        name: "poi"
        description: "Point of Interest object"
        required: false
        schema:
          $ref: "#/definitions/Poi"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointOfInterest"
  /poi-state:
    get:
      tags:
      - "Point of Interest"
      summary: "Get POI state"
      operationId: "poiStateAllGET"
      parameters: []
      responses:
        200:
          description: "An array of POI states"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PoiState"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointOfInterest"
  /recurrence-frequency:
    get:
      tags:
      - "Recurrence"
      summary: "Get Recurrence Frequency"
      operationId: "recurrenceFrequencyAllGET"
      parameters: []
      responses:
        200:
          description: "An array of Recurrence Frequencies"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RecurrenceFrequency"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Recurrence"
  /tag:
    get:
      tags:
      - "Point of Interest"
      summary: "Get Tags"
      description: "Returns an array of tag."
      operationId: "tagGET"
      parameters: []
      responses:
        200:
          description: "An array of tag"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointOfInterest"
  /users:
    get:
      tags:
      - "User"
      summary: "Get Users"
      description: "Return an array of all users\n"
      operationId: "usersAllGET"
      parameters: []
      responses:
        200:
          description: "An array of Users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
    post:
      tags:
      - "User"
      summary: "Add a new User"
      description: "Return an array of all users\n"
      operationId: "userPOST"
      parameters:
      - in: "body"
        name: "user"
        description: "User object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
  /users/{userId}:
    get:
      tags:
      - "User"
      summary: "Get User"
      description: "Get User by ID\n"
      operationId: "userGET"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
    delete:
      tags:
      - "User"
      summary: "Remove User"
      description: "Delete User by ID\n"
      operationId: "userDELETE"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
    patch:
      tags:
      - "User"
      summary: "Update User"
      description: "Update User by ID\n"
      operationId: "userPATCH"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "string"
      - in: "body"
        name: "user"
        description: "The User object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
  /user-type:
    get:
      tags:
      - "User"
      summary: "Get User type"
      operationId: "userTypeAllGET"
      parameters: []
      responses:
        200:
          description: "An array of User types"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserType"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
  /user-state:
    get:
      tags:
      - "User"
      summary: "Get User state"
      operationId: "userStateAllGET"
      parameters: []
      responses:
        200:
          description: "An array of User states"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserState"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
  /weekday:
    get:
      tags:
      - "Recurrence"
      summary: "Get Weekday"
      operationId: "weekdayAllGET"
      parameters: []
      responses:
        200:
          description: "An array of Weekdays"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Weekday"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Recurrence"
definitions:
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    description: "A category is a system administrator defined classification to group\
      \ point of interests with a similar theme"
  Poi:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier representing a specific point of interest\
          \ for a given latitude & longitude"
      name:
        type: "string"
        description: "The name of the Point of Interest"
      gps_lat:
        type: "string"
        description: "The latitude for the Point of Interest"
      gps_long:
        type: "string"
        description: "The longitude for the Point of Interest"
      location_polygon:
        type: "string"
        description: "The location polygon for the Point of Interest"
      distance_in_metre:
        type: "integer"
        format: "int32"
        description: "Distance from a given location, in metre"
      start_date:
        type: "string"
        description: "The Start Date for the Point of Interest"
      end_date:
        type: "string"
        description: "The End Date for the Point of Interest"
      opening_hours:
        type: "string"
        description: "The Opening Hours of the Point of Interest"
      is_all_day:
        type: "boolean"
        description: "Indicates whether the Point of Interest takes place for the\
          \ entire day"
      poi_url:
        type: "string"
        description: "URL to an external website for the Point of Interest"
      description:
        type: "string"
        description: "Description of the Point of Interest"
      categories:
        type: "string"
        description: "A list of categories for the Point of Interest, deliminated\
          \ by commas"
      tags:
        type: "string"
        description: "A list of tags for the Point of Interest, deliminated by commas"
    description: "Point of Interest"
  PoiState:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    description: "State of a Point of Interest, i.e. Approved, Declined, Deleted,\
      \ Submitted"
  RecurrenceFrequency:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    description: "Recurrence Frequency, i.e. Daily, Weekly, Monthly, Yearly"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    description: "A tag can be created by end users to identify the point of interest"
  User:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier representing a user"
      name:
        type: "string"
        description: "Name of the user"
      email:
        type: "string"
        description: "The email address of the user"
      phone:
        type: "string"
        description: "The phone number of the user"
      type:
        type: "string"
        description: "Type of the user account"
      state:
        type: "string"
        description: "State of the user account"
      oauth_provider:
        type: "string"
        description: "OAuth Provider if the user is SSO to the system"
      oauth_token:
        type: "string"
        description: "SSO token retrieved from the OAuth Provider"
      oauth_token_expiration:
        type: "string"
        format: "date-time"
        description: "SSOExpiration date of the SSO token defined by the OAuth Provider"
  UserType:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    description: "Type of a user, i.e. Admin, Moderator, End User"
  UserState:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    description: "State of a user, i.e. Active, Deleted, Disabled, EmailNotVerified,\
      \ Locked"
  Weekday:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    description: "Name of the weekday, e.g. Monday, Tuesday and so on..."
  Success:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "Response code"
      message:
        type: "string"
        description: "Response message"
      object:
        type: "object"
        description: "Response object"
        properties: {}
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "Response code"
      message:
        type: "string"
        description: "Response message"
      fields:
        type: "string"
