---
swagger: "2.0"
info:
  description: "Interact with your city with the Open City Project API"
  version: "1.0.0"
  title: "Open City Project API"
host: "api.opencityproject.nz"
basePath: "/v1"
schemes:
- "https"
produces:
- "application/json"
paths:
  /poi:
    get:
      tags:
      - "Points of Interest"
      summary: "Get Points of Interest"
      description: "Returns information about the Points of Interest near your location.\n"
      operationId: "poiGET"
      parameters:
      - name: "lat"
        in: "query"
        description: "Latitude component of location."
        required: true
        type: "number"
        format: "double"
      - name: "long"
        in: "query"
        description: "Longitude component of location."
        required: true
        type: "number"
        format: "double"
      responses:
        200:
          description: "An array of Points of Interest"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/POI"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
    post:
      tags:
      - "Points of Interest"
      summary: "Add Point of Interest"
      description: "Upload a new Point of Interest.\n"
      operationId: "poiPOST"
      parameters:
      - in: "body"
        name: "poi"
        description: "Point of Interest object"
        required: true
        schema:
          $ref: "#/definitions/POI"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
  /poi/{poiId}:
    get:
      tags:
      - "Point of Interest by ID"
      summary: "Get Point of Interest by ID"
      description: "Returns information about the specific Point of Interest.\n"
      operationId: "poiGETbyID"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: "string"
      responses:
        200:
          description: "A single Point of Interest"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/POI"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
    delete:
      tags:
      - "Points of Interest"
      summary: "Remove Point of Interest by ID"
      description: "Delete a specific Point of Interest.\n"
      operationId: "poiPoiIdDELETE"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
    patch:
      tags:
      - "Points of Interest"
      summary: "Update Point of Interest"
      description: "Update a specific Point of Interest.\n"
      operationId: "poiPoiIdPATCH"
      parameters:
      - name: "poiId"
        in: "path"
        description: "The id of the Point of Interest"
        required: true
        type: "string"
      - in: "body"
        name: "poi"
        description: "Point of Interest object"
        required: false
        schema:
          $ref: "#/definitions/POI"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PointsOfInterest"
  /users:
    get:
      tags:
      - "Users"
      summary: "Get Users"
      description: "Return an array of all users\n"
      operationId: "usersGET"
      parameters: []
      responses:
        200:
          description: "An array of Users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
    post:
      tags:
      - "Users"
      summary: "Add a new User"
      description: "Return an array of all users\n"
      operationId: "usersPOST"
      parameters:
      - in: "body"
        name: "user"
        description: "User object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
  /users/{userId}:
    get:
      tags:
      - "Users"
      summary: "Get User"
      description: "Get User by ID\n"
      operationId: "usersUserIdGET"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
    delete:
      tags:
      - "Users"
      summary: "Remove User"
      description: "Delete User by ID\n"
      operationId: "usersUserIdDELETE"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
    patch:
      tags:
      - "Users"
      summary: "Update User"
      description: "Update User by ID\n"
      operationId: "usersUserIdPATCH"
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "string"
      - name: "user"
        in: "body"
        description: "The User object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
definitions:
  User:
    type: "object"
    properties:
      userId:
        type: "string"
        description: "Unique identifier representing a user"
      username:
        type: "string"
        description: "Unique identifier representing a user"
      name:
        type: "string"
        description: "The name of the user"
      email:
        type: "string"
        description: "The email address of the user"
  POI:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier representing a specific point of interest for a given latitude & longitude"
      name:
        type: "string"
        description: "The name of the Point of Interest"
      what_makes_it_sweet:
        type: "string"
        description: "Few sentences on what makes the Point of Interest sweet"
      location_title:
        type: "string"
        description: "The location of the Point of Interest"
      gps_lat:
        type: "string"
        description: "The latitude for the Point of Interest"
      gps_long:
        type: "string"
        description: "The longitude for the Point of Interest"
      start_date:
        type: "string"
        description: "The Start Date for the Point of Interest"
      end_date:
        type: "string"
        description: "The End Date for the Point of Interest"
      opening_hours:
        type: "string"
        description: "The Opening Hours of the Point of Interest"
      is_all_day:
        type: "boolean"
        description: "Indicates whether the Point of Interest takes place for the entire day"
      website_url:
        type: "string"
        description: "URL to the Point of Interest on the Open City Project Website"
      description:
        type: "string"
        description: "Description of the Point of Interest"
      category:
        type: "string"
        description: "Category for the Point of Interest"
        enum:
        - "connect_with_others"
        - "savour_the_moment"
        - "be_active"
        - "keep_learning"
        - "make_a_difference"
  Success:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "Response code"
      message:
        type: "string"
        description: "Response message"
      object:
        type: "object"
        description: "Response object"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "Response code"
      message:
        type: "string"
        description: "Response message"
      fields:
        type: "string"
