# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Open City Project API
  description: Interact with your city with the Open City Project API
  version: "1.0.0"
# the domain of the service
host: api.opencityproject.nz
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /users:
    get:
      summary: Get Users
      description: |
        The users endpoint returns all users in the database
      tags:
        - Users
      responses:
        200:
          description: An array of Users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add User
      description: |
        The users endpoint to add another point of interest
      parameters:
        - name: poi
          in: body
          description: Point of Interest object
          required: true
          schema:
            $ref: '#/definitions/POI'
      tags:
        - Users
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Success'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{username}:
    patch:
      summary: Update User
      description: |
        The users endpoint to update point of interest
      parameters:
        - name: username
          in: path
          type: string
          description: The username of the user
          required: true
      tags:
        - Users
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Success'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove User
      description: |
        The user endpoint to remove User
      parameters:
        - name: username
          in: path
          type: string
          description: The username of the user
          required: true
      tags:
        - Users
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Success'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /poi:
    get:
      summary: Get Points of Interest
      description: |
        The Points of Interest endpoint returns information about the Points of Interest near your location.
      parameters:
        - name: lat
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: lng
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
      tags:
        - Points of Interest
      responses:
        200:
          description: An array of Points of Interest
          schema:
            type: array
            items:
              $ref: '#/definitions/POI'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add Point of Interest
      description: |
        The Points of Interest endpoint to add another point of interest
      parameters:
        - name: poi
          in: body
          description: Point of Interest object
          required: true
          schema:
            $ref: '#/definitions/POI'
      tags:
        - Points of Interest
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Success'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /poi/{poiId}:
    patch:
      summary: Update Point of Interest
      description: |
        The Points of Interest endpoint to update point of interest
      parameters:
        - name: poiId
          in: path
          type: string
          description: The id of the Point of Interest
          required: true
        - name: poi
          in: body
          description: Point of Interest object
          required: false
          schema:
            $ref: '#/definitions/POI'
      tags:
        - Points of Interest
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Success'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove Point of Interest
      description: |
        The Points of Interest endpoint to remove point of interest
      parameters:
        - name: poiId
          in: path
          type: string
          description: The id of the Point of Interest
          required: true
        - name: poi
          in: body
          description: Point of Interest object
          required: false
          schema:
            $ref: '#/definitions/POI'
      tags:
        - Points of Interest
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Success'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    type: object
    properties:
      username:
        type: string
        description: Unique identifier representing a user
      name:
        type: string
        description: The name the user uses to represent themselves
      email:
        type: string
        description: The users email address
  POI:
    type: object
    properties:
      poi_id:
        type: string
        description: Unique identifier representing a specific point of interest for a given latitude & longitude.
      poi_name:
        type: string
        description: The name for the Point of Interest
      poi_type:
        type: string
        description: The type of Point of Interest.
        enum: ["poi", "event"]
      gps_lat:
        type: string
        description: The latitude for the Point of Interest
      gps_lng:
        type: string
        description: The longitude for the Point of Interest
      category:
        type: string
        description: Category for the point of interest
        enum: ["First", "Second", "Third", "Fourth", "Fifth"]
  Success:
    type: object
    properties:
      success:
        type: boolean
        description: Simply true for successful api call
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

