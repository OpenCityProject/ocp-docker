/**
 * Open City Project API
 * Interact with your city with the Open City Project API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenCityProjectApi);
  }
}(this, function(expect, OpenCityProjectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenCityProjectApi.PointOfInterestApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PointOfInterestApi', function() {
    describe('categoryGET', function() {
      it('should call categoryGET successfully', function(done) {
        //uncomment below and update the code to test categoryGET
        //instance.categoryGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('categoryIdDELETE', function() {
      it('should call categoryIdDELETE successfully', function(done) {
        //uncomment below and update the code to test categoryIdDELETE
        //instance.categoryIdDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('categoryIdPATCH', function() {
      it('should call categoryIdPATCH successfully', function(done) {
        //uncomment below and update the code to test categoryIdPATCH
        //instance.categoryIdPATCH(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('categoryPOST', function() {
      it('should call categoryPOST successfully', function(done) {
        //uncomment below and update the code to test categoryPOST
        //instance.categoryPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loginPOST', function() {
      it('should call loginPOST successfully', function(done) {
        //uncomment below and update the code to test loginPOST
        //instance.loginPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poiAllGET', function() {
      it('should call poiAllGET successfully', function(done) {
        //uncomment below and update the code to test poiAllGET
        //instance.poiAllGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poiDELETE', function() {
      it('should call poiDELETE successfully', function(done) {
        //uncomment below and update the code to test poiDELETE
        //instance.poiDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poiGET', function() {
      it('should call poiGET successfully', function(done) {
        //uncomment below and update the code to test poiGET
        //instance.poiGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poiGetByCategory', function() {
      it('should call poiGetByCategory successfully', function(done) {
        //uncomment below and update the code to test poiGetByCategory
        //instance.poiGetByCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poiPATCH', function() {
      it('should call poiPATCH successfully', function(done) {
        //uncomment below and update the code to test poiPATCH
        //instance.poiPATCH(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poiPOST', function() {
      it('should call poiPOST successfully', function(done) {
        //uncomment below and update the code to test poiPOST
        //instance.poiPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poiStateAllGET', function() {
      it('should call poiStateAllGET successfully', function(done) {
        //uncomment below and update the code to test poiStateAllGET
        //instance.poiStateAllGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagGET', function() {
      it('should call tagGET successfully', function(done) {
        //uncomment below and update the code to test tagGET
        //instance.tagGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagIdDELETE', function() {
      it('should call tagIdDELETE successfully', function(done) {
        //uncomment below and update the code to test tagIdDELETE
        //instance.tagIdDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagIdPATCH', function() {
      it('should call tagIdPATCH successfully', function(done) {
        //uncomment below and update the code to test tagIdPATCH
        //instance.tagIdPATCH(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagPOST', function() {
      it('should call tagPOST successfully', function(done) {
        //uncomment below and update the code to test tagPOST
        //instance.tagPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
