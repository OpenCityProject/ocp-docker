/**
 * Open City Project API
 * Interact with your city with the Open City Project API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OpenCityProjectApi) {
      root.OpenCityProjectApi = {};
    }
    root.OpenCityProjectApi.POI = factory(root.OpenCityProjectApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The POI model module.
   * @module model/POI
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>POI</code>.
   * @alias module:model/POI
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>POI</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/POI} obj Optional instance to populate.
   * @return {module:model/POI} The populated <code>POI</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('poi_id')) {
        obj['poi_id'] = ApiClient.convertToType(data['poi_id'], 'String');
      }
      if (data.hasOwnProperty('poi_name')) {
        obj['poi_name'] = ApiClient.convertToType(data['poi_name'], 'String');
      }
      if (data.hasOwnProperty('poi_type')) {
        obj['poi_type'] = ApiClient.convertToType(data['poi_type'], 'String');
      }
      if (data.hasOwnProperty('gps_lat')) {
        obj['gps_lat'] = ApiClient.convertToType(data['gps_lat'], 'String');
      }
      if (data.hasOwnProperty('gps_lng')) {
        obj['gps_lng'] = ApiClient.convertToType(data['gps_lng'], 'String');
      }
      if (data.hasOwnProperty('category')) {
        obj['category'] = ApiClient.convertToType(data['category'], 'String');
      }
    }
    return obj;
  }

  /**
   * Unique identifier representing a specific point of interest for a given latitude & longitude.
   * @member {String} poi_id
   */
  exports.prototype['poi_id'] = undefined;
  /**
   * The name for the Point of Interest
   * @member {String} poi_name
   */
  exports.prototype['poi_name'] = undefined;
  /**
   * The type of Point of Interest.
   * @member {module:model/POI.PoiTypeEnum} poi_type
   */
  exports.prototype['poi_type'] = undefined;
  /**
   * The latitude for the Point of Interest
   * @member {String} gps_lat
   */
  exports.prototype['gps_lat'] = undefined;
  /**
   * The longitude for the Point of Interest
   * @member {String} gps_lng
   */
  exports.prototype['gps_lng'] = undefined;
  /**
   * Category for the point of interest
   * @member {module:model/POI.CategoryEnum} category
   */
  exports.prototype['category'] = undefined;


  /**
   * Allowed values for the <code>poi_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PoiTypeEnum = {
    /**
     * value: "poi"
     * @const
     */
    "poi": "poi",
    /**
     * value: "event"
     * @const
     */
    "event": "event"  };

  /**
   * Allowed values for the <code>category</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CategoryEnum = {
    /**
     * value: "First"
     * @const
     */
    "First": "First",
    /**
     * value: "Second"
     * @const
     */
    "Second": "Second",
    /**
     * value: "Third"
     * @const
     */
    "Third": "Third",
    /**
     * value: "Fourth"
     * @const
     */
    "Fourth": "Fourth",
    /**
     * value: "Fifth"
     * @const
     */
    "Fifth": "Fifth"  };


  return exports;
}));


